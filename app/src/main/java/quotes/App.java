/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package quotes;

import com.google.common.reflect.TypeToken;
import com.google.gson.Gson;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.lang.reflect.Type;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.List;
import java.net.URL;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        System.out.println(new App().getGreeting());
        String apiuRL = "http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en";
        try {
            URL url = new URL(apiuRL);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");
            connection.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.11 (KHTML, like Gecko) Chrome/23.0.1271.95 Safari/537.11");
            int status = connection.getResponseCode();
            System.out.println(status);

            if(status == 200){
                InputStream inputStream = connection.getInputStream();
                InputStreamReader inputStreamReader = new InputStreamReader(inputStream);
                BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
                String line = bufferedReader.readLine();
                    System.out.println(line);

                bufferedReader.close();
            } else{
                Path path= Paths.get("recentquotes.json");
                System.out.println("from method "+generateRandomQuote(path));
            }

            connection.disconnect();
        } catch (IOException e){
            System.out.println("Connection error \n Offline quotes");
            Path path= Paths.get("recentquotes.json");
            System.out.println("from method "+generateRandomQuote(path));
        }

        // lab 08: Batool please uncomment to two lines below and test it again
//        Path path= Paths.get("recentquotes.json");
//        System.out.println("from method "+generateRandomQuote(path));


        //        Path path1= Paths.get("test.json");


    }
    public static Quotes generateRandomQuote(Path path){
        ArrayList<Quotes> quotesLost = new ArrayList<Quotes>();
        Gson gson=new Gson();
        String [] arr=new String[5];
        Quotes newquot=new Quotes(arr,"","","");
        Type quotesGson=new TypeToken<List<Quotes>>(){}.getType();
        try (BufferedReader reader = Files.newBufferedReader(path)) {
            quotesLost=gson.fromJson(reader,quotesGson);
            String line = reader.readLine();
            while (line != null){
//                System.out.println(line);
                line = reader.readLine();
            }
//            System.out.println(quotesLost.size());

                int rand =  (int) (Math.random() * quotesLost.size());
//                System.out.println(rand);
                newquot = quotesLost.get(rand);
                System.out.println(newquot);

        } catch (Exception  e) {
            e.printStackTrace();
        }
    return newquot;
    }
}
